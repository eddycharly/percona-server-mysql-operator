# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  creationTimestamp: null
  name: gr-users
spec:
  steps:
  - name: step-00
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions
          init_temp_dir # do this only in the first TestStep

          deploy_operator
          deploy_non_tls_cluster_secrets
          deploy_tls_cluster_secrets
          deploy_client
    - assert:
        file: 00-assert.yaml
  - name: step-01
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          get_cr \
            | yq eval '.spec.mysql.clusterType="group-replication"' - \
            | yq eval '.spec.mysql.size=3' - \
            | yq eval '.spec.proxy.haproxy.enabled=false' - \
            | yq eval '.spec.proxy.router.enabled=true' - \
            | yq eval '.spec.proxy.router.size=3' - \
            | kubectl -n "${NAMESPACE}" apply -f -
    - assert:
        file: 01-assert.yaml
  - name: step-02
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nmysql_args=\"-h
          $(get_router_service $(get_cluster_name)) -uroot -proot_password\"\nusers=($(get_mysql_users
          \"${mysql_args}\"))\n\nargs=''\nfor user in \"${users[@]}\"; do\n\thost=\"%\"\n\tcase
          $user in\n\t\theartbeat | xtrabackup)\n\t\t\thost=\"localhost\"\n\t\t\t;;\n\tesac\n\tquery=\"SHOW
          GRANTS FOR '${user}'@'${host}';\"\n\n\trun_mysql \"${query}\" \"${mysql_args}\"
          \\\n\t\t| sed -E \"s/'(10|192)[.][0-9][^']*'//; s/'[^']*[.]internal'//\"
          \\\n\t\t\t>\"${TEMP_DIR}/${user}.sql\"\n\n\targs=\"${args} --from-file=${user}=${TEMP_DIR}/${user}.sql\"\ndone\n\nkubectl
          create configmap -n \"${NAMESPACE}\" 02-check-users $args\nkubectl get configmap
          -n \"${NAMESPACE}\" 02-check-users -o yaml"
    - assert:
        file: 02-assert.yaml
  - name: step-03
    try:
    - apply:
        file: 03-update-passwords.yaml
  - name: step-04
    try:
    - script:
        content: "set -o pipefail\nset -o errexit\nset -o xtrace\n\nsource ../../functions\n\nsleep
          30 # wait for cluster status to change to initializing\nwait_cluster_consistency_gr
          \"${test_name}\" \"3\" \"3\"\nmysql_args=\"-h $(get_router_service $(get_cluster_name))
          -uroot -proot_password_updated\"\nusers=($(get_mysql_users \"${mysql_args}\"))\n\n#
          check connection\nargs=\"\"\nset +o errexit\nfor user in \"${users[@]}\";
          do\n\tmysql_args=\"-h $(get_router_service $(get_cluster_name)) -u${user}
          -p${user}_password_updated\"\n\n\tpod=mysql-client\n\tcase $user in\n\t\theartbeat
          | xtrabackup)\n\t\t\tmysql_args=\"-h localhost -u${user} -p${user}_password_updated\"\n\t\t\tpod=\"$(get_cluster_name)-mysql-0\"\n\t\t\t;;\n\tesac\n\n\trun_mysql
          \"SELECT 1\" \"${mysql_args}\" \"${pod}\"\n\n\targs=\"${args} --from-literal=${user}=$([
          $? -eq 0 ] && echo 'success' || echo 'fail')\"\ndone\nset -o errexit\n\nkubectl
          create configmap -n \"${NAMESPACE}\" 04-check-connections $args\nkubectl
          get configmap -n \"${NAMESPACE}\" 04-check-connections -o yaml"
    - assert:
        file: 04-assert.yaml
  - name: step-99
    try:
    - apply:
        file: 99-drop-finalizer.yaml
