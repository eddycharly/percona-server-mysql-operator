# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  creationTimestamp: null
  name: operator-self-healing
spec:
  steps:
  - catch:
    - script:
        content: kubectl assert exist-enhanced deployment percona-server-mysql-operator
          -n ${OPERATOR_NS:-$NAMESPACE} --field-selector status.readyReplicas=1
    name: step-00
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions
          init_temp_dir # do this only in the first TestStep

          deploy_operator
          deploy_non_tls_cluster_secrets
          deploy_tls_cluster_secrets
          deploy_client
    - assert:
        file: 00-assert.yaml
  - name: step-01
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          deploy_chaos_mesh
    - assert:
        file: 01-assert.yaml
  - name: step-02
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          get_cr \
            | yq eval '.spec.mysql.clusterType="async"' - \
            | yq eval '.spec.mysql.size=3' - \
            | yq eval '.spec.mysql.affinity.antiAffinityTopologyKey="none"' - \
            | yq eval '.spec.proxy.haproxy.enabled=true' - \
            | yq eval '.spec.proxy.haproxy.size=3' - \
            | yq eval '.spec.proxy.haproxy.affinity.antiAffinityTopologyKey="none"' - \
            | yq eval '.spec.orchestrator.enabled=true' - \
            | yq eval '.spec.orchestrator.size=3' - \
            | yq eval '.spec.orchestrator.affinity.antiAffinityTopologyKey="none"' - \
            | kubectl -n "${NAMESPACE}" apply -f -
    - assert:
        file: 02-assert.yaml
  - name: step-03
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nrun_mysql
          \\\n\t\"CREATE DATABASE IF NOT EXISTS myDB; CREATE TABLE IF NOT EXISTS myDB.myTable
          (id int PRIMARY KEY)\" \\\n\t\"-h $(get_haproxy_svc $(get_cluster_name))
          -uroot -proot_password\"\n\nrun_mysql \\\n\t\"INSERT myDB.myTable (id) VALUES
          (100500)\" \\\n\t\"-h $(get_haproxy_svc $(get_cluster_name)) -uroot -proot_password\""
  - name: step-04
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          data=$(run_mysql "SELECT * FROM myDB.myTable" "-h $(get_haproxy_svc $(get_cluster_name)) -uroot -proot_password")

          kubectl create configmap -n "${NAMESPACE}" 04-read-from-primary --from-literal=data="${data}"
    - assert:
        file: 04-assert.yaml
  - catch:
    - script:
        content: kubectl assert exist-enhanced deployment percona-server-mysql-operator
          -n ${OPERATOR_NS:-$NAMESPACE} --field-selector status.readyReplicas=1
    name: step-05
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          init_pod=$(get_operator_pod)
          kill_pods "${OPERATOR_NS:-$NAMESPACE}" "pod" "$init_pod" "" "operator"
          sleep 10 # wait a bit for pod to be killed
          wait_deployment percona-server-mysql-operator "${OPERATOR_NS:-$NAMESPACE}"

          if [ "$init_pod" == "$(get_operator_pod)" ]; then
            echo "operator pod was not killed! something went wrong."
            exit 1
          fi
    - assert:
        file: 05-assert.yaml
  - name: step-06
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          get_cr \
            | yq eval '.spec.mysql.clusterType="async"' - \
            | yq eval '.spec.mysql.size=3' - \
            | yq eval '.spec.mysql.affinity.antiAffinityTopologyKey="none"' - \
            | yq eval '.spec.proxy.haproxy.enabled=true' - \
            | yq eval '.spec.proxy.haproxy.size=5' - \
            | yq eval '.spec.proxy.haproxy.affinity.antiAffinityTopologyKey="none"' - \
            | yq eval '.spec.orchestrator.enabled=true' - \
            | yq eval '.spec.orchestrator.size=3' - \
            | yq eval '.spec.orchestrator.affinity.antiAffinityTopologyKey="none"' - \
            | kubectl -n "${NAMESPACE}" apply -f -
    - assert:
        file: 06-assert.yaml
  - catch:
    - script:
        content: kubectl assert exist-enhanced deployment percona-server-mysql-operator
          -n ${OPERATOR_NS:-$NAMESPACE} --field-selector status.readyReplicas=1
    name: step-07
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          network_loss "${OPERATOR_NS:-$NAMESPACE}" "$(get_operator_pod)" "operator"
          sleep 30 # wait for network loss to happen
    - assert:
        file: 07-assert.yaml
  - name: step-08
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          get_cr \
            | yq eval '.spec.mysql.clusterType="async"' - \
            | yq eval '.spec.mysql.size=3' - \
            | yq eval '.spec.mysql.affinity.antiAffinityTopologyKey="none"' - \
            | yq eval '.spec.proxy.haproxy.enabled=true' - \
            | yq eval '.spec.proxy.haproxy.size=3' - \
            | yq eval '.spec.proxy.haproxy.affinity.antiAffinityTopologyKey="none"' - \
            | yq eval '.spec.orchestrator.enabled=true' - \
            | yq eval '.spec.orchestrator.size=3' - \
            | yq eval '.spec.orchestrator.affinity.antiAffinityTopologyKey="none"' - \
            | kubectl -n "${NAMESPACE}" apply -f -
    - assert:
        file: 08-assert.yaml
  - catch:
    - script:
        content: kubectl assert exist-enhanced deployment percona-server-mysql-operator
          -n ${OPERATOR_NS:-$NAMESPACE} --field-selector status.readyReplicas=1
    name: step-09
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          failure_pod "${OPERATOR_NS:-$NAMESPACE}" "$(get_operator_pod)" "operator"
          sleep 30 # wait for pod failure to happen
    - assert:
        file: 09-assert.yaml
  - name: step-10
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          get_cr \
            | yq eval '.spec.mysql.clusterType="async"' - \
            | yq eval '.spec.mysql.size=3' - \
            | yq eval '.spec.mysql.affinity.antiAffinityTopologyKey="none"' - \
            | yq eval '.spec.proxy.haproxy.enabled=true' - \
            | yq eval '.spec.proxy.haproxy.size=5' - \
            | yq eval '.spec.proxy.haproxy.affinity.antiAffinityTopologyKey="none"' - \
            | yq eval '.spec.orchestrator.enabled=true' - \
            | yq eval '.spec.orchestrator.size=3' - \
            | yq eval '.spec.orchestrator.affinity.antiAffinityTopologyKey="none"' - \
            | kubectl -n "${NAMESPACE}" apply -f -
    - assert:
        file: 10-assert.yaml
  - name: step-11
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          destroy_chaos_mesh
  - name: step-99
    try:
    - apply:
        file: 99-drop-finalizer.yaml
