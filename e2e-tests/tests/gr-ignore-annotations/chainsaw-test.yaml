# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  creationTimestamp: null
  name: gr-ignore-annotations
spec:
  steps:
  - name: step-00
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions
          init_temp_dir # do this only in the first TestStep

          deploy_operator
          deploy_client
    - assert:
        file: 00-assert.yaml
  - name: step-01
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nget_cr
          \\\n  | yq eval '.spec.mysql.clusterType=\"group-replication\"' - \\\n\t|
          yq eval '.spec.proxy.router.enabled=true' - \\\n\t| yq eval '.spec.proxy.haproxy.enabled=false'
          - \\\n  | yq eval '.spec.mysql.expose.enabled=true' - \\\n  | yq eval '.spec.mysql.expose.type=\"LoadBalancer\"'
          - \\\n  | yq eval '.spec.proxy.router.expose.type=\"LoadBalancer\"' - \\\n
          \ | kubectl -n \"${NAMESPACE}\" apply -f -"
    - assert:
        file: 01-assert.yaml
  - name: step-02
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\nmysql_svc=$(get_mysql_service
          gr-ignore-annotations)\nrouter_svc=$(get_mysql_router_service gr-ignore-annotations)\n\nkubectl
          get svc  $mysql_svc-0 -o yaml -n \"${NAMESPACE}\" \\\n\t| yq eval '.metadata.annotations
          += {\"gr-annotations-to-ignore-mysql\": \"true\", \"gr-annotations-not-to-ignore-mysql\":
          \"true\" }' - \\\n\t| yq eval '.metadata.labels += {\"gr-labels-to-ignore-mysql\":
          \"true\", \"gr-labels-not-to-ignore-mysql\": \"true\" }' - \\\n  | kubectl
          -n \"${NAMESPACE}\" apply -f -\n\nkubectl get svc  $router_svc -o yaml -n
          \"${NAMESPACE}\"\\\n  | yq eval '.metadata.annotations += {\"gr-annotations-to-ignore-router\":
          \"true\", \"gr-annotations-not-to-ignore-router\": \"true\" }' - \\\n  |
          yq eval '.metadata.labels += {\"gr-labels-to-ignore-router\": \"true\",
          \"gr-labels-not-to-ignore-router\": \"true\" }' - \\\n  | kubectl -n \"${NAMESPACE}\"
          apply -f -"
    - assert:
        file: 02-assert.yaml
  - name: step-03
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          kubectl -n "${NAMESPACE}" patch ps "$(get_cluster_name)" \
            --type json \
            -p '[{"op": "add", "path": "/spec/ignoreAnnotations", "value": ["gr-annotations-to-ignore-mysql","gr-annotations-to-ignore-router"] }]'

          kubectl -n "${NAMESPACE}" patch ps "$(get_cluster_name)" \
            --type json \
            -p '[{"op": "add", "path": "/spec/ignoreLabels", "value": ["gr-labels-to-ignore-mysql","gr-labels-to-ignore-router"] }]'
    - assert:
        file: 03-assert.yaml
  - name: step-04
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          kubectl -n "${NAMESPACE}" patch ps "$(get_cluster_name)" \
            --type json \
            -p '[{"op": "add", "path": "/spec/mysql/expose", "value": {"enabled": true, "type": LoadBalancer,"annotations": {"service.beta.kubernetes.io/aws-load-balancer-backend-protocol": "http","service.beta.kubernetes.io/aws-load-balancer-backend": "test-type"}, "labels": {"rack": "rack-22","rack-test": "rack-test-22"}}}]'

          kubectl -n "${NAMESPACE}" patch ps "$(get_cluster_name)" \
            --type json \
            -p '[{"op": "add", "path": "/spec/proxy/router/expose", "value": {"type": LoadBalancer ,"annotations": {"service.beta.kubernetes.io/aws-load-balancer-backend-protocol": "http","service.beta.kubernetes.io/aws-load-balancer-backend": "test-type"}, "labels": {"rack": "rack-22","rack-test": "rack-test-22"}}}]'
    - assert:
        file: 04-assert.yaml
  - name: step-05
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          kubectl -n "${NAMESPACE}" patch ps "$(get_cluster_name)" \
            --type json \
            -p '[{"op": "replace", "path": "/spec/mysql/expose", "value": {"enabled": true, "type": LoadBalancer,"annotations": {"service.beta.kubernetes.io/aws-load-balancer-backend-protocol": "http"}, "labels": {"rack": "rack-22"}}}]'

          kubectl -n "${NAMESPACE}" patch ps "$(get_cluster_name)" \
            --type json \
            -p '[{"op": "replace", "path": "/spec/proxy/router/expose", "value": {"type": LoadBalancer ,"annotations": {"service.beta.kubernetes.io/aws-load-balancer-backend-protocol": "http"}, "labels": {"rack": "rack-22"}}}]'
    - assert:
        file: 05-assert.yaml
  - name: step-06
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          kubectl -n "${NAMESPACE}" patch ps "$(get_cluster_name)" \
            --type json \
            -p '[{"op": "replace", "path": "/spec/mysql/expose", "value": {"enabled": true, "type": LoadBalancer,"annotations": {"service.beta.kubernetes.io/aws-load-balancer-backend-protocol": "http-test"}, "labels": {"rack": "rack-22-test"}}}]'

          kubectl -n "${NAMESPACE}" patch ps "$(get_cluster_name)" \
            --type json \
            -p '[{"op": "replace", "path": "/spec/proxy/router/expose", "value": {"type": LoadBalancer ,"annotations": {"service.beta.kubernetes.io/aws-load-balancer-backend-protocol": "http-test"}, "labels": {"rack": "rack-22-test"}}}]'
    - assert:
        file: 06-assert.yaml
  - name: step-07
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          kubectl -n "${NAMESPACE}" patch ps "$(get_cluster_name)" \
            --type json \
            -p '[{"op": "replace", "path": "/spec/ignoreAnnotations", "value": [] }]'

          kubectl -n "${NAMESPACE}" patch ps "$(get_cluster_name)" \
            --type json \
            -p '[{"op": "replace", "path": "/spec/ignoreLabels", "value": [] }]'
    - assert:
        file: 07-assert.yaml
  - name: step-99
    try:
    - apply:
        file: 99-drop-finalizer.yaml
