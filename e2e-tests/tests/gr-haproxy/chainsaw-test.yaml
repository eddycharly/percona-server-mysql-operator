# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  creationTimestamp: null
  name: gr-haproxy
spec:
  steps:
  - name: step-00
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions
          init_temp_dir # do this only in the first TestStep

          deploy_operator
          deploy_non_tls_cluster_secrets
          deploy_tls_cluster_secrets
          deploy_client
    - assert:
        file: 00-assert.yaml
  - name: step-01
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nget_cr
          \\\n\t| yq eval '.spec.mysql.clusterType=\"group-replication\"' - \\\n\t|
          yq eval '.spec.proxy.router.enabled=false' - \\\n\t| yq eval '.spec.proxy.haproxy.enabled=true'
          - \\\n\t| kubectl -n \"${NAMESPACE}\" apply -f -"
    - assert:
        file: 01-assert.yaml
  - name: step-02
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nrun_mysql
          \\\n\t\"CREATE DATABASE IF NOT EXISTS myDB; CREATE TABLE IF NOT EXISTS myDB.myTable
          (id int PRIMARY KEY)\" \\\n\t\"-h $(get_haproxy_svc $(get_cluster_name))
          -uroot -proot_password\"\n\nrun_mysql \\\n\t\"INSERT myDB.myTable (id) VALUES
          (100500)\" \\\n\t\"-h $(get_haproxy_svc $(get_cluster_name)) -uroot -proot_password\""
  - name: step-03
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          args=""

          primary=$(run_mysql "SELECT count(*) FROM myDB.myTable" "-h $(get_haproxy_svc $(get_cluster_name)) -uroot -proot_password")
          args="${args} --from-literal=primary=${primary}"

          replica=$(run_mysql "SELECT count(*) FROM myDB.myTable" "-h $(get_haproxy_svc $(get_cluster_name)) -P 3307 -uroot -proot_password")
          args="${args} --from-literal=replica=${replica}"

          # uncomment after https://jira.percona.com/browse/K8SPS-284
          # proxy_protocol=$(run_mysql "SELECT count(*) FROM myDB.myTable" "-h $(get_haproxy_svc $(get_cluster_name)) -P 3309 -uroot -proot_password")
          # args="${args} --from-literal=proxy_protocol=${proxy_protocol}"

          mysqlx=$(run_mysqlsh "SELECT count(*) FROM myDB.myTable" "-h $(get_haproxy_svc $(get_cluster_name)) -P 33060 -uroot -proot_password")
          args="${args} --from-literal=mysqlx=${mysqlx}"

          mysql_admin=$(run_mysql "SELECT count(*) FROM myDB.myTable" "-h $(get_haproxy_svc $(get_cluster_name)) -P 33062 -uroot -proot_password")
          args="${args} --from-literal=mysql_admin=${mysql_admin}"

          kubectl create configmap -n "${NAMESPACE}" 03-check-connections $args
    - assert:
        file: 03-assert.yaml
  - name: step-04
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          check_passwords_leak
  - name: step-99
    try:
    - apply:
        file: 99-drop-finalizer.yaml
