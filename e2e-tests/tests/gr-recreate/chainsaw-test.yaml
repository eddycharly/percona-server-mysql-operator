# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  creationTimestamp: null
  name: gr-recreate
spec:
  steps:
  - name: step-00
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions
          init_temp_dir # do this only in the first TestStep

          deploy_operator
          deploy_non_tls_cluster_secrets
          deploy_tls_cluster_secrets
          deploy_client
    - assert:
        file: 00-assert.yaml
  - name: step-01
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          get_cr \
            | yq eval '.spec.mysql.clusterType="group-replication"' - \
            | yq eval '.spec.mysql.size=3' - \
            | yq eval '.spec.proxy.router.enabled=true' - \
            | yq eval '.spec.proxy.router.size=3' - \
            | yq eval '.spec.proxy.haproxy.enabled=false' - \
            | kubectl -n "${NAMESPACE}" apply -f -
    - assert:
        file: 01-assert.yaml
  - name: step-02
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nrun_mysql
          \\\n\t\"CREATE DATABASE IF NOT EXISTS myDB; CREATE TABLE IF NOT EXISTS myDB.myTable
          (id int PRIMARY KEY)\" \\\n\t\"-h $(get_mysql_router_service $(get_cluster_name))
          -P 6446 -uroot -proot_password\"\n\nrun_mysql \\\n\t\"INSERT myDB.myTable
          (id) VALUES (100500)\" \\\n\t\"-h $(get_mysql_router_service $(get_cluster_name))
          -P 6446 -uroot -proot_password\"\n\nfor i in 0 1 2; do\n  host=$(get_mysql_headless_fqdn
          $(get_cluster_name) $i)\n  data=$(run_mysql \"SELECT * FROM myDB.myTable\"
          \"-h ${host} -uroot -proot_password\")\n  kubectl create configmap -n \"${NAMESPACE}\"
          02-write-data-${i} --from-literal=data=\"${data}\"\ndone"
    - assert:
        file: 02-assert.yaml
  - name: step-03
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nget_cr
          \\\n\t| yq eval '.spec.pause=true' - \\\n\t| yq eval '.spec.mysql.clusterType=\"group-replication\"'
          - \\\n  | yq eval '.spec.mysql.size=3' - \\\n\t| yq eval '.spec.proxy.router.enabled=true'
          - \\\n\t| yq eval '.spec.proxy.router.size=3' - \\\n\t| yq eval '.spec.proxy.haproxy.enabled=false'
          - \\\n\t| kubectl -n \"${NAMESPACE}\" apply -f -"
    - assert:
        file: 03-assert.yaml
  - name: step-04
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nget_cr
          \\\n\t| yq eval '.spec.pause=false' - \\\n\t| yq eval '.spec.mysql.clusterType=\"group-replication\"'
          - \\\n  | yq eval '.spec.mysql.size=3' - \\\n\t| yq eval '.spec.proxy.router.enabled=true'
          - \\\n\t| yq eval '.spec.proxy.router.size=3' - \\\n\t| yq eval '.spec.proxy.haproxy.enabled=false'
          - \\\n\t| kubectl -n \"${NAMESPACE}\" apply -f -"
    - assert:
        file: 04-assert.yaml
  - name: step-05
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nrun_mysql
          \\\n\t\"INSERT myDB.myTable (id) VALUES (100501)\" \\\n\t\"-h $(get_mysql_router_service
          $(get_cluster_name)) -P 6446 -uroot -proot_password\"\n\nfor i in 0 1 2;
          do\n  host=$(get_mysql_headless_fqdn $(get_cluster_name) $i)\n  data=$(run_mysql
          \"SELECT * FROM myDB.myTable\" \"-h ${host} -uroot -proot_password\")\n
          \ kubectl create configmap -n \"${NAMESPACE}\" 06-write-data-${i} --from-literal=data=\"${data}\"\ndone"
    - assert:
        file: 05-assert.yaml
  - name: step-07
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          kubectl delete ps -n ${NAMESPACE} gr-recreate
    - error:
        file: 07-errors.yaml
  - name: step-08
    try:
    - assert:
        file: 08-assert.yaml
  - name: step-09
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nget_cr
          \\\n\t| yq eval '.spec.mysql.clusterType=\"group-replication\"' - \\\n  |
          yq eval '.spec.mysql.size=3' - \\\n\t| yq eval '.spec.proxy.router.enabled=true'
          - \\\n\t| yq eval '.spec.proxy.router.size=3' - \\\n\t| yq eval '.spec.proxy.haproxy.enabled=false'
          - \\\n\t| kubectl -n \"${NAMESPACE}\" apply -f -"
    - assert:
        file: 09-assert.yaml
  - name: step-10
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nrun_mysql
          \\\n\t\"INSERT myDB.myTable (id) VALUES (100502)\" \\\n\t\"-h $(get_mysql_router_service
          $(get_cluster_name)) -P 6446 -uroot -proot_password\"\n\nfor i in 0 1 2;
          do\n  host=$(get_mysql_headless_fqdn $(get_cluster_name) $i)\n  data=$(run_mysql
          \"SELECT * FROM myDB.myTable\" \"-h ${host} -uroot -proot_password\")\n
          \ kubectl create configmap -n \"${NAMESPACE}\" 11-write-data-${i} --from-literal=data=\"${data}\"\ndone"
    - assert:
        file: 10-assert.yaml
  - name: step-99
    try:
    - apply:
        file: 99-drop-finalizer.yaml
