# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  creationTimestamp: null
  name: monitoring
spec:
  steps:
  - name: step-00
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions
          init_temp_dir # do this only in the first TestStep

          deploy_operator
          deploy_non_tls_cluster_secrets
          deploy_tls_cluster_secrets
          deploy_client
    - assert:
        file: 00-assert.yaml
  - name: step-01
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          deploy_pmm_server
          sleep 30 # wait for PMM Server to start

          API_KEY=$(get_pmm_api_key)
          kubectl patch -n "${NAMESPACE}" secret test-secrets --type merge --patch '{"stringData": {"pmmserverkey": '$API_KEY'}}'
    - assert:
        file: 01-assert.yaml
  - name: step-02
    try:
    - script:
        content: "set -o errexit\nset -o xtrace\n\nsource ../../functions\n\nget_cr
          \\\n  | yq eval '.spec.mysql.clusterType=\"async\"' - \\\n\t| yq eval '.spec.pmm.enabled
          = true' - \\\n\t| yq eval '.spec.proxy.haproxy.enabled = true' - \\\n\t|
          yq eval '.spec.proxy.haproxy.expose.type = \"LoadBalancer\"' - \\\n\t| kubectl
          -n \"${NAMESPACE}\" apply -f -"
    - assert:
        file: 02-assert.yaml
  - name: step-03
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          # add new PMM API key to secret
          API_KEY_NEW=$(get_pmm_api_key "operator-new")
          kubectl patch -n "${NAMESPACE}" secret test-secrets --type merge --patch '{"stringData": {"pmmserverkey": '$API_KEY_NEW'}}'

          # delete old PMM key
          delete_pmm_api_key "operator"
          sleep 10
    - assert:
        file: 03-assert.yaml
  - name: step-04
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          sleep 70 # we should wait more than one minute because `get_metric_values` gets data for the last 60 seconds

          API_KEY=$(kubectl get secret internal-monitoring -o jsonpath='{.data.pmmserverkey}' -n "${NAMESPACE}" | base64 --decode)

          for i in $(seq 0 2); do
              get_metric_values node_boot_time_seconds ${NAMESPACE}-$(get_cluster_name)-mysql-${i} api_key:$API_KEY
              get_metric_values mysql_global_status_uptime ${NAMESPACE}-$(get_cluster_name)-mysql-${i} api_key:$API_KEY
          done

          sleep 90 # wait for QAN

          get_qan20_values monitoring-mysql-0 api_key:$API_KEY

          haproxy_svc=$(get_service_ip "monitoring-haproxy")
          http_code=$(curl -s -o /dev/null -w "%{http_code}" http://${haproxy_svc}:8404/metrics)
          if [[ $http_code != 200 ]]; then
              echo "Error: http code is $http_code"
              exit 1
          fi
  - name: step-05
    try:
    - script:
        content: |-
          set -o errexit
          set -o xtrace

          source ../../functions

          check_passwords_leak
  - name: step-99
    try:
    - apply:
        file: 99-drop-finalizer.yaml
